import:
    net.twilightmc.skReflectabase.DatabaseManager
    net.twilightmc.skReflectabase.SkReflectabase

command /setvariable:
    trigger:
        # Get plugin instance and database manager
        set {_plugin} to SkReflectabase.getInstance()
        set {_dbManager} to {_plugin}.getDatabaseManager()

        # Ensure the "variables" table exists
        set {_tableExists} to {_dbManager}.tableExists("variables")
        if {_tableExists} is false:
            send "Creating 'variables' table..." to player
            set {_createQuery} to "CREATE TABLE variables (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(255), value VARCHAR(255));"
            set {_result} to {_dbManager}.executeUpdate({_createQuery})
            if {_result} >= 0:
                send "Table 'variables' created successfully." to player
            else:
                send "Failed to create the 'variables' table. Check your database settings." to player
                stop

        # Set a variable for testing (you will definitely have a different system and way of doing this lmao)
        set {_varName} to "exampleVariable"
        set {_varValue} to "exampleValue"

        # Check if variable already exists
        set {_selectQuery} to "SELECT * FROM variables WHERE name = ?"
        set {_result} to {_dbManager}.executeQuery({_selectQuery}, {_varName})

        if {_result} is set:
            set {_rowCount} to {_result}.getRows().size()
        else:
            set {_rowCount} to 0

        if {_rowCount} > 0:
            # Update existing variable
            set {_updateQuery} to "UPDATE variables SET value = ? WHERE name = ?"
            set {_updateResult} to {_dbManager}.executeUpdate({_updateQuery}, {_varValue}, {_varName})
            if {_updateResult} > 0:
                send "Variable '%{_varName}%' updated to '%{_varValue}%'." to player
            else:
                send "Failed to update variable '%{_varName}%'." to player
        else:
            # Insert new variable if it does not exist
            set {_insertQuery} to "INSERT INTO variables (name, value) VALUES (?, ?)"
            set {_insertResult} to {_dbManager}.executeUpdate({_insertQuery}, {_varName}, {_varValue})
            if {_insertResult} > 0:
                send "Variable '%{_varName}%' set to '%{_varValue}%'." to player
            else:
                send "Failed to set variable '%{_varName}%'." to player

command /getvariable:
    trigger:
        # Get plugin instance and database manager
        set {_plugin} to SkReflectabase.getInstance()
        set {_dbManager} to {_plugin}.getDatabaseManager()

        # Get the testing variable
        set {_varName} to "exampleVariable"
        set {_selectQuery} to "SELECT value FROM variables WHERE name = ?"
        set {_result} to {_dbManager}.executeQuery({_selectQuery}, {_varName})

        if {_result} is set:
            set {_rowCount} to {_result}.getRows().size()
        else:
            set {_rowCount} to 0

        if {_rowCount} > 0:
            set {_varValue} to {_result}.getValue(0, "value")
            send "Variable '%{_varName}%' has value '%{_varValue}%'." to player
        else:
            send "Variable '%{_varName}%' not found." to player
